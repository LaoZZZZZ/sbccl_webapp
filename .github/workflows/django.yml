name: Django CI

on: push

jobs:
  runner-job:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    # Service containers to run with `runner-job`
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      # Label used to access the service container
      postgres:
        # Docker Hub image
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v4
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm ci
      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data
        run: node client.js
        # Environment variables used by the `client.js` script to create
        # a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
      - name: Run Tests
        run: |
          python manage.py test members.serializers_test
          python manage.py test members.views_test
